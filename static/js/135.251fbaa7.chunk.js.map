{"version":3,"file":"static/js/135.251fbaa7.chunk.js","mappings":"4OACA,EAA6B,iCAA7B,EAAiF,uCAAjF,EAAsI,kCAAtI,EAA4L,wCAA5L,EAAsP,sCAAtP,EAAmS,2BAAnS,EAA2U,iCAA3U,EAAwX,gCAAxX,EAAya,qCAAza,EAA6d,mCAA7d,EAAghB,uEAAhhB,EAAomB,iCAApmB,EAAgpB,+B,SC0FhpB,EAlFqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBV,GACfW,MAAK,SAAAC,GAAQ,OAAIR,EAAaQ,EAAjB,GACjB,GAAE,CAACZ,IAEJ,IACEa,EAKEV,EALFU,eACAC,EAIEX,EAJFW,aACAC,EAGEZ,EAHFY,SACAC,EAEEb,EAFFa,OACAC,EACEd,EADFc,YAGF,GAAKJ,EAAL,CAEA,IAAIK,EAAcF,EAAOG,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACnDC,EAAwC,GAA1BT,EAAaU,QAAQ,GAEjCC,EAAQ,oBAAGlB,EAASmB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEzC,OACE,gCACGtB,IAAY,SAAC,KAAD,CACXuB,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,cACVC,aAAc,CACZC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAIf,SAAC,KAAD,CAAMC,UAAWC,EAAgBC,GAAId,EAArC,mBACA,iBAAKY,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAAiCzB,KACjC,iBAAKwB,UAAWC,EAAhB,WACE,gBACEE,OAAQ,kBAAMlC,GAAW,EAAjB,EACRmC,IAAKC,EAAAA,GAAiBzB,EACtB0B,IAAK9B,EACLiB,MAAO,OACT,iBAAKO,UAAWC,EAAhB,WACE,eAAGD,UAAS,UAAKC,EAAL,YAAiBA,GAA7B,yBAA2Df,EAA3D,QACA,eAAIc,UAAWC,EAAf,uBACA,cAAGD,UAAWC,EAAd,SAAyBvB,KACzB,eAAIsB,UAAWC,EAAf,qBACA,cAAGD,UAAS,UAAKC,EAAL,YAAiBA,GAA7B,SAAgDpB,KAChD,eAAImB,UAAWC,EAAf,qCACA,iBAAKD,UAAWC,EAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EACXC,GAAG,OACHb,MAAO,CAAEC,KAAMF,GAHjB,mBAOA,SAAC,KAAD,CACEY,UAAWC,EACXC,GAAG,UACHb,MAAO,CAAEC,KAAMF,GAHjB,kCAWR,SAAC,EAAAmB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QA1DqB,CA8D5B,C,8MC1FYC,EAAM,mCACNJ,EAAiB,mCAEvB,SAAeK,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,MAAM,2DAAD,OAA4DF,IAFrF,cAEGlC,EAFH,yBAGIA,EAASqC,QAHb,gCAKHC,QAAQC,IAAI,SAAZ,MALG,wFASA,SAAezC,EAAtB,+CAAO,OAAP,oBAAO,WAAiC0C,GAAjC,gGAEoBJ,MAAM,sCAAD,OAAuCI,EAAvC,oBAA0DN,IAFnF,cAEGlC,EAFH,yBAGIA,EAASqC,QAHb,gCAKHC,QAAQC,IAAI,SAAZ,MALG,wFASA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,gGAEoBJ,MAAM,sCAAD,OAAuCI,EAAvC,4BAAkEN,IAF3F,cAEGlC,EAFH,yBAGIA,EAASqC,QAHb,gCAKHC,QAAQC,IAAI,SAAZ,MALG,wFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAkCF,GAAlC,gGAEoBJ,MAAM,sCAAD,OAAuCI,EAAvC,4BAAkEN,IAF3F,cAEGlC,EAFH,yBAGIA,EAASqC,QAHb,gCAKHC,QAAQC,IAAI,SAAZ,MALG,wFASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAGoBR,MAAM,qDAAD,OAAsDF,EAAtD,kBAAmEU,EAAnE,+CAHzB,cAGG5C,EAHH,yBAIIA,EAASqC,QAJb,gCAMHC,QAAQC,IAAI,SAAZ,MANG,wF","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/requestMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backButton\":\"MovieDetails_backButton__pPF5M\",\"movieInfoWrapper\":\"MovieDetails_movieInfoWrapper__UrK0t\",\"titleHeader\":\"MovieDetails_titleHeader__2xj86\",\"innerBlockWrapper\":\"MovieDetails_innerBlockWrapper__npmtZ\",\"textInfoWrapper\":\"MovieDetails_textInfoWrapper__gUAzS\",\"text\":\"MovieDetails_text__RHcc4\",\"textGenres\":\"MovieDetails_textGenres__Q2Avz\",\"textScore\":\"MovieDetails_textScore__ksskH\",\"overviewHeader\":\"MovieDetails_overviewHeader__qTtoJ\",\"genresHeader\":\"MovieDetails_genresHeader__uSa6j\",\"addInfoHeader\":\"MovieDetails_addInfoHeader__F+Vs- MovieDetails_overviewHeader__qTtoJ\",\"navigation\":\"MovieDetails_navigation__ySN5l\",\"infoLink\":\"MovieDetails_infoLink__hTo+c\"};","import { Link, Outlet, useParams } from \"react-router-dom\";\nimport { requestMoviesByID } from \"../../services/requestMovies\";\nimport { useState, useEffect } from \"react\";\nimport { Dna } from 'react-loader-spinner';\nimport { PATH_TO_IMAGES } from \"../../services/requestMovies\";\nimport { useLocation } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport css from \"./MovieDetails.module.css\";\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState({});\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    requestMoviesByID(movieId)\n      .then(response => setMovieInfo(response));     \n  }, [movieId]);\n\n  const {\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    poster_path,\n  } = movieInfo;\n  \n  if (!original_title) return;\n\n  let movieGenres = genres.map(genre => genre.name).join(', ');\n  let voteAverage = vote_average.toFixed(1) * 10;\n\n  const backHref = location.state?.from ?? \"/\";\n \n  return (\n    <>\n      {loading && (<Dna\n        visible={true}\n        height=\"200\"\n        width=\"200\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{\n          position: \"fixed\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n        }}\n      />)}\n      \n      <Link className={css.backButton} to={backHref}>Back</Link>      \n      <div className={css.movieInfoWrapper}>\n        <h1 className={css.titleHeader}>{original_title}</h1>\n        <div className={css.innerBlockWrapper}>\n          <img\n            onLoad={() => setLoading(false)}\n            src={PATH_TO_IMAGES + poster_path}\n            alt={original_title}\n            width={300} />\n          <div className={css.textInfoWrapper}>\n            <p className={`${css.text} ${css.textScore}`}>User score: {voteAverage}%</p>\n            <h2 className={css.overviewHeader}>Overview</h2>\n            <p className={css.text}>{overview}</p>\n            <h3 className={css.genresHeader}>Genres</h3>\n            <p className={`${css.text} ${css.textGenres}`}>{movieGenres}</p>\n            <h2 className={css.addInfoHeader}>Additional information</h2>\n            <nav className={css.navigation}>\n              <Link\n                className={css.infoLink}\n                to='cast'\n                state={{ from: backHref  }}\n              >\n                Cast\n              </Link>\n              <Link\n                className={css.infoLink}\n                to='reviews'\n                state={{ from: backHref }}\n              >\n                Reviews\n              </Link>\n            </nav>\n          </div>\n        </div>\n      </div>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n\n\n\n// location.state.from\n","export const KEY = '62f46feb65c2319fb0db62c2c080ca35';\nexport const PATH_TO_IMAGES = 'https://image.tmdb.org/t/p/w500/';\n\nexport async function requestTrandingMovies() {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`);\n    return response.json();    \n  } catch (error) {\n    console.log('ERROR:', error);    \n  };\n};\n\nexport async function requestMoviesByID(movieID) {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${movieID}?api_key=${KEY}`);\n    return response.json();    \n  } catch (error) {\n    console.log('ERROR:', error);    \n  };\n};\n\nexport async function requestCastByID(movieID) {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${KEY}`);\n    return response.json();    \n  } catch (error) {\n    console.log('ERROR:', error);    \n  };\n};\n\nexport async function requestMovieReview(movieID) {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=${KEY}`);\n    return response.json();    \n  } catch (error) {\n    console.log('ERROR:', error);    \n  };\n};\n\nexport async function requestMovieByName(httpQuery) {\n  // console.log(httpQuery);\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${httpQuery}&language=en-US&page=1&include_adult=false`);\n    return response.json();    \n  } catch (error) {\n    console.log('ERROR:', error);    \n  };\n};\n\n"],"names":["movieId","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","useEffect","requestMoviesByID","then","response","original_title","vote_average","overview","genres","poster_path","movieGenres","map","genre","name","join","voteAverage","toFixed","backHref","state","from","visible","height","width","ariaLabel","wrapperStyle","position","top","left","transform","className","css","to","onLoad","src","PATH_TO_IMAGES","alt","Suspense","fallback","KEY","requestTrandingMovies","fetch","json","console","log","movieID","requestCastByID","requestMovieReview","requestMovieByName","httpQuery"],"sourceRoot":""}